---
- name: Create XDG config directory
  file:
    path: "{{ ansible_env.HOME }}/.config"
    state: directory

- name: Create directories
  file:
    path: "{{ ansible_env.HOME }}/.config/nvim/{{ item }}"
    state: directory
  with_items:
    - "autoload"
    - "plugin"

- name: Link init.vim
  file:
    src: "{{ role_path }}/files/init.vim"
    path: "{{ ansible_env.HOME }}/.config/nvim/init.vim"
    state: link

- name: Link plugin settings
  file:
    src: "{{ item }}"
    path: "{{ ansible_env.HOME }}/.config/nvim/plugin/{{item | basename }}"
    state: link
  with_fileglob:
    - nvim/*

- name: Install plugin manager
  get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: "{{ ansible_env.HOME }}/.config/nvim/autoload/"

- name: Install neovim support via rubygems
  gem:
    name: neovim
    executable: gem

- name: Install neovim support via python2
  shell: |
    virtualenv -p ~/.pyenv/versions/"{{ python2_version }}"/bin/python "{{ ansible_env.HOME }}"/dev/envs/nvim2
    source "{{ ansible_env.HOME }}"/dev/envs/nvim2/bin/activate
    pip install neovim
    deactivate
  args:
    creates: "{{ ansible_env.HOME }}/dev/envs/nvim2"

- name: Install neovim support via python3
  shell: |
    virtualenv -p ~/.pyenv/versions/"{{ python3_version }}"/bin/python "{{ ansible_env.HOME }}"/dev/envs/nvim3
    source "{{ ansible_env.HOME }}"/dev/envs/nvim3/bin/activate
    pip install neovim
    pip install neovim-remote
    deactivate
  args:
    creates: "{{ ansible_env.HOME }}/dev/envs/nvim3"

- name: Install neovim plugins
  shell: "nvim +PlugInstall +UpdateRemotePlugins +qa"
